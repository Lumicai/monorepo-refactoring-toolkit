version: '3.8'

# Development-specific overrides for docker-compose
# Usage: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

services:
  # Development version with hot reload
  wundr:
    build:
      target: builder  # Use builder stage for development
    volumes:
      - .:/app                    # Mount source code for hot reload
      - /app/node_modules        # Exclude node_modules from mount
      - wundr_dev_data:/app/data
      - wundr_dev_logs:/app/logs
    environment:
      - NODE_ENV=development
      - DEBUG=wundr:*
      - WUNDR_LOG_LEVEL=debug
    command: ["pnpm", "dev"]
    ports:
      - "3000:3000"
      - "9229:9229"  # Node.js debugging port

  # Development web client with hot reload
  wundr-web:
    volumes:
      - ./tools/web-client:/app/tools/web-client
      - /app/tools/web-client/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3000
      - FAST_REFRESH=true
    command: ["pnpm", "dev"]

  # Development database with exposed port
  postgres:
    environment:
      - POSTGRES_DB=wundr_dev
      - POSTGRES_USER=wundr_dev
      - POSTGRES_PASSWORD=dev_password
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./scripts/database/dev-init.sql:/docker-entrypoint-initdb.d/init.sql:ro

  # Development Redis
  redis:
    command: redis-server --appendonly yes  # No password in dev
    ports:
      - "6380:6379"  # Different port for development

  # File watcher for automatic rebuilds
  watcher:
    image: node:20-alpine
    container_name: wundr-watcher
    working_dir: /app
    volumes:
      - .:/app
      - /app/node_modules
    command: ["sh", "-c", "corepack enable && pnpm install && pnpm watch"]
    depends_on:
      - wundr
    networks:
      - wundr_network

  # Development tools container
  devtools:
    image: node:20-alpine
    container_name: wundr-devtools
    working_dir: /app
    volumes:
      - .:/app
      - /app/node_modules
    command: ["sh", "-c", "corepack enable && tail -f /dev/null"]
    networks:
      - wundr_network
    profiles:
      - tools

  # Mock external services for testing
  mockserver:
    image: mockserver/mockserver:latest
    container_name: wundr-mockserver
    ports:
      - "1080:1080"
    environment:
      - MOCKSERVER_LOG_LEVEL=INFO
    networks:
      - wundr_network
    profiles:
      - testing

volumes:
  wundr_dev_data:
    driver: local
  wundr_dev_logs:
    driver: local
  postgres_dev_data:
    driver: local