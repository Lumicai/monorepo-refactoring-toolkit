name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  NODE_VERSION: 'lts/*'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Setup Node.js
        uses: actions/setup-node@main
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Setup Node.js
        uses: actions/setup-node@main
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript type checking
        run: npm run type-check

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node: ['lts/*', 'current']
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Setup Node.js
        uses: actions/setup-node@main
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:ci

      - name: Upload coverage
        if: matrix.os == 'ubuntu-latest' && matrix.node == 'lts/*'
        uses: codecov/codecov-action@main
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, typecheck, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Setup Node.js
        uses: actions/setup-node@main
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Verify build output
        run: |
          test -f dist/cli.js
          test -f dist/index.js
          test -f dist/index.d.ts

      - name: Upload build artifacts
        uses: actions/upload-artifact@main
        with:
          name: build-artifacts
          path: dist/

  integration:
    name: Integration Test
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Setup Node.js
        uses: actions/setup-node@main
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@main
        with:
          name: build-artifacts
          path: dist/

      - name: Run CLI smoke test
        run: |
          chmod +x bin/new-starter.js
          node bin/new-starter.js --version
          node bin/new-starter.js --help

      - name: Test setup command (dry run)
        run: |
          node bin/new-starter.js setup \
            --email test@example.com \
            --github-username testuser \
            --name "Test User" \
            --skip-prompts \
            --only permissions || true